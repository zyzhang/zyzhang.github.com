<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: 搭建博客 | Zhenyu's Blog]]></title>
  <link href="http://zyzhang.github.io/blog/categories/da-jian-bo-ke/atom.xml" rel="self"/>
  <link href="http://zyzhang.github.io/"/>
  <updated>2014-09-05T12:01:07+08:00</updated>
  <id>http://zyzhang.github.io/</id>
  <author>
    <name><![CDATA[张振宇]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[避免依赖Github Pages和Jekyll生成静态文件]]></title>
    <link href="http://zyzhang.github.io/blog/2012/09/10/avoid-dependency-of-github-pages-jekyll/"/>
    <updated>2012-09-10T00:00:00+08:00</updated>
    <id>http://zyzhang.github.io/blog/2012/09/10/avoid-dependency-of-github-pages-jekyll</id>
    <content type="html"><![CDATA[<p>之前用Github Pages + Jekyll搭建了自己的博客，有一次玩Jekyll插件之后，博客里所有使用Pygments的代码高亮都不工作了，
即使revert代码也无济于事，更奇怪的是，本地运行jekyll完全没问题，折腾很久都没有解决&hellip; 最后，我只好采取了终极解决方案了。</p>

<p><a href="https://help.github.com/articles/using-jekyll-with-pages">Github Pages的文档</a>上说，当前（2012年9月）使用的是
Jekyll 0.11.0和Liquid 2.2.2，并且使用下面命令运行：</p>

<p><div class="highlight"><pre><code class="language-bash" data-lang="bash"><span class="nv">$ </span>jekyll <span class="p">&amp;</span>ndash<span class="p">;</span>pygments <span class="p">&amp;</span>ndash<span class="p">;</span>no-lsi <span class="p">&amp;</span>ndash<span class="p">;</span>safe</code></pre></div></p>

<!-- more -->


<p>很可能是版本问题造成本地行为和Github Server行为不一致，但我已经不想深究真正的原因了，因为Github Pages如何运作，出了什么问题，
对我完全不可见。</p>

<p>最后，我采取了下面的方案
* 在repository根目录（<code>zyzhang.github.com</code>）下创建stage文件夹，所有jekyll相关的文件都在这个文件夹下
* 在根目录下添加<code>.nojekyll</code>文件，github pages会禁用Jekyll
* 每次都在stage中启动jekyll预览博客
* 发布时，将<code>stage/_site</code>中的所有文件copy到根目录下 （命令行中运行stage/publish）
* git push</p>

<p>这样，就完全解耦了对Github Pages运行环境的依赖，只要本地是work的，server上就一定是work的，另外，可以在本地随意的
使用和编写jekyll插件(Github Pages出于安全原因不会运行用户自定义的plugin)</p>

<p>具体文件结构参见<a href="https://github.com/zyzhang/zyzhang.github.com">源代码</a>。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Github Pages + Jekyll搭建博客之SEO]]></title>
    <link href="http://zyzhang.github.io/blog/2012/09/03/blog-with-github-pages-and-jekyll-seo/"/>
    <updated>2012-09-03T00:00:00+08:00</updated>
    <id>http://zyzhang.github.io/blog/2012/09/03/blog-with-github-pages-and-jekyll-seo</id>
    <content type="html"><![CDATA[<p>对我自己的博客而言，有些内容仅仅是自娱自乐，有没有人看不重要；而有的内容我希望能分享出去被更多的人看到，比如nHibernate Mapping By Code的一系列文章，
都是项目中实际总结出来的，那时候nHibernate刚刚增加Mapping By Code的方式，官方文档内容几乎没有，google搜索很少能找到精确的结果。所以，如果这些文章能
被更广泛的传播会帮助更多的人。</p>

<p>在用<a href="http://pages.github.com">Github Pages</a> + <a href="http://jekyllrb.com">Jekyll</a>搭建博客的过程中，
学到了不少<a href="http://en.wikipedia.org/wiki/Search_engine_optimization">SEO（Search Engine Optimization）</a>
的知识，比如如何让博客被搜索引擎收录，需要注意哪些以提高排名等等。于是，便有了下面几条简单的总结。</p>

<!-- more -->


<h3>让搜索引擎收录</h3>

<ul>
<li><p>如果没有任何超链接指向你的站点，在internet这个浩大的有向图中，站点就成了孤岛，不可能被搜索引擎收录。所以尽一切可能在其他网站上引用你的站点，比如友情链接，
或者在原博客上添加新博客的超链接。</p></li>
<li><p><a href="http://www.google.com/webmasters/">Google Webmasters - Google站长工具</a>和<a href="http://zhanzhang.baidu.com/welcome">百度站长工具</a>都提供了提交sitemap，
提交网站URL要求搜索引擎收录，索引状态查询等功能</p></li>
</ul>


<h3>为每个页面添加描述性的信息</h3>

<ul>
<li>在<code>&lt;head&gt;</code>标签中包含描述性强的title</li>
</ul>


<p><div class="highlight"><pre><code class="language-html" data-lang="html"><span class="nt">&lt;title&gt;</span>Github Pages + Jekyll搭建博客之SEO<span class="nt">&lt;/title&gt;</span></code></pre></div></p>

<ul>
<li>在<code>&lt;meta&gt;</code>标签中指定准确并且可读性强的描述(description)，它会在搜索结果中显示。</li>
</ul>


<p><div class="highlight"><pre><code class="language-html" data-lang="html"><span class="nt">&lt;meta</span> <span class="na">content=</span><span class="s">&quot;在用Github Pages + Jekyll搭建博客的过程中，学到了不少SEO（Search Engine Optimization）的知识，比如如何让博客被搜索引擎收录，如何提高排名等等。 于是，便有了下面几条简单的总结。&quot;</span> <span class="na">name=</span><span class="s">&quot;description&quot;</span><span class="nt">&gt;</span></code></pre></div></p>

<ul>
<li><a href="http://jekyllbootstrap.com">Jekyll-Bootstrap</a>已经帮你做好这个了，只需在每个page和post的开头指定title和description就可以了:</li>
</ul>


<h2><div class="highlight"><pre><code class="language-html" data-lang="html"><span class="nt">&lt;/h2&gt;</span>

<span class="nt">&lt;p&gt;</span>layout: post
title: <span class="ni">&amp;ldquo;</span>Github Pages + Jekyll搭建博客之SEO<span class="ni">&amp;rdquo;</span>
description: <span class="ni">&amp;ldquo;</span>在用Github Pages + Jekyll搭建博客的过程中，学到了不少SEO（Search Engine Optimization）的知识，比如如何让博客被搜索引擎收录，需要注意哪些以提高排名等等。于是，便有了下面几条简单的总结。<span class="ni">&amp;rdquo;</span>
category: Tech<span class="nt">&lt;/p&gt;</span>

<span class="nt">&lt;h2&gt;</span>tags: [Github Pages, Jekyll, SEO]<span class="nt">&lt;/h2&gt;</span>

<span class="nt">&lt;p&gt;</span></code></pre></div></p>

<p>关于<a href="http://pages.github.com">Github Pages</a>，<a href="http://jekyllrb.com">Jekyll</a>和<a href="http://jekyllbootstrap.com">Jekyll-Bootstrap</a>，
请参考我的另一篇文章<a href="/blog/2012/08/29/blogging-like-a-geek">像极客一样写博客</a></p>

<h3>多用内部链接</h3>

<p>内部链接指的是同一个网站的内容页面之间的互相链接，比如下面引文中的“<a href="/blog/2012/08/29/blogging-like-a-geek">像极客一样写博客</a>”。</p>

<blockquote><p>关于<a href="http://pages.github.com">Github Pages</a>，<a href="http://jekyllrb.com">Jekyll</a>和<a href="http://jekyllbootstrap.com">Jekyll-Bootstrap</a>，
请参考我的另一篇文章<a href="/blog/2012/08/29/blogging-like-a-geek">像极客一样写博客</a></p></blockquote>

<p>相关性高的内部链接除了有助于提高用户体验外，还有助于提高搜索引擎的索引效率，控制站内权重分布，并提升网站的收录率。
<a href="http://bbs.chinaz.com/Shuiba/thread-1683921-1-1.html">这个文章</a>对内部链接总结的挺好。</p>

<h3>避免死链接</h3>

<p><a href="http://baike.baidu.com/view/1880779.htm">死链接</a>即无效链接，不仅用户体验不好，还会降低网站在搜索引擎中的权重。</p>

<p><a href="http://jekyllbootstrap.com">Jekyll-Bootstrap</a>默认的permalink就是一个造成死链接的隐患：</p>

<p><code>permalink: /:categories/:year/:month/:day/:title</code></p>

<p>Jekyll会按照这个格式为每篇文章生成URL，例如：</p>

<p><code>zyzhang.github.com/tech/2012/01/01/helloworld</code></p>

<p>一旦你重新组织或修改了category，所有的内部链接都要修改，否则就成了死链接，另外，之前被搜索引擎收录的页面也全部失效了。</p>

<p>所以，我把permalink修改成了：</p>

<p><code>permalink: /blog/:year/:month/:day/:title</code></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[用Jekyll和Pygments配置代码高亮]]></title>
    <link href="http://zyzhang.github.io/blog/2012/08/31/highlight-with-Jekyll-and-Pygments/"/>
    <updated>2012-08-31T00:00:00+08:00</updated>
    <id>http://zyzhang.github.io/blog/2012/08/31/highlight-with-Jekyll-and-Pygments</id>
    <content type="html"><![CDATA[<p><a href="http://jekyllrb.com">Jekyll</a>默认的代码段样式太丑了，而且不支持语法高亮。不过，Jekyll原生支持语法高亮工具<a href="http://pygments.org">Pygments</a>。Pygments支持超过100种语言，
并且支持多种输出格式，比如HTML, RTF等等。</p>

<h3>修改_config.yml</h3>

<p>设置<code>pygments: true</code></p>

<h3>本地安装Pygments</h3>

<ul>
<li>Pygments是基于Python的，所以机器上需要<a href="http://www.python.org/download/">安装Python</a>，我用的是Mac，已默认安装Python。</li>
<li><a href="http://pypi.python.org/pypi/Pygments">下载</a>最新的Pygments, 本文使用的是Pygments-1.5.tar.gz，下载完成后解压</li>
<li>在解压后的Pygments目录中，运行命令：<code>sudo python setup.py install</code></li>
</ul>


<!-- more -->


<h3>选择一种喜欢的代码高亮样式</h3>

<p>Pygments提供了多种样式，比如&#8217;native&#8217;, &lsquo;emacs&rsquo;, &lsquo;vs&#8217;等等，可以在<a href="http://pygments.org/demo">Pygments Demo</a>中选择某种语言的例子，体验不同的样式。</p>

<p>通过下面的命令可以查看当前支持的样式：</p>

<p><div class="highlight"><pre><code class="language-python" data-lang="python"><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>

<span class="o">&lt;</span><span class="n">blockquote</span><span class="o">&gt;&lt;</span><span class="n">blockquote</span><span class="o">&gt;&lt;</span><span class="n">blockquote</span><span class="o">&gt;&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="kn">from</span> <span class="nn">pygments.styles</span> <span class="kn">import</span> <span class="n">STYLE_MAP</span>
<span class="n">STYLE_MAP</span><span class="o">.</span><span class="n">keys</span><span class="p">()</span>
<span class="p">[</span><span class="o">&amp;</span><span class="n">lsquo</span><span class="p">;</span><span class="n">monokai</span><span class="o">&amp;</span><span class="n">rsquo</span><span class="p">;,</span> <span class="o">&amp;</span><span class="n">lsquo</span><span class="p">;</span><span class="n">manni</span><span class="o">&amp;</span><span class="n">rsquo</span><span class="p">;,</span> <span class="o">&amp;</span><span class="n">lsquo</span><span class="p">;</span><span class="n">rrt</span><span class="o">&amp;</span><span class="n">rsquo</span><span class="p">;,</span> <span class="o">&amp;</span><span class="n">lsquo</span><span class="p">;</span><span class="n">perldoc</span><span class="o">&amp;</span><span class="n">rsquo</span><span class="p">;,</span> <span class="o">&amp;</span><span class="n">lsquo</span><span class="p">;</span><span class="n">borland</span><span class="o">&amp;</span><span class="n">rsquo</span><span class="p">;,</span> <span class="o">&amp;</span><span class="n">lsquo</span><span class="p">;</span><span class="n">colorful</span><span class="o">&amp;</span><span class="n">rsquo</span><span class="p">;,</span> <span class="o">&amp;</span><span class="n">lsquo</span><span class="p">;</span><span class="n">default</span><span class="o">&amp;</span><span class="n">rsquo</span><span class="p">;,</span> <span class="o">&amp;</span><span class="n">lsquo</span><span class="p">;</span><span class="n">murphy</span><span class="o">&amp;</span><span class="n">rsquo</span><span class="p">;,</span> <span class="o">&amp;</span><span class="n">lsquo</span><span class="p">;</span><span class="n">vs</span><span class="o">&amp;</span><span class="n">rsquo</span><span class="p">;,</span> <span class="o">&amp;</span><span class="n">lsquo</span><span class="p">;</span><span class="n">trac</span><span class="o">&amp;</span><span class="n">rsquo</span><span class="p">;,</span> <span class="o">&amp;</span><span class="n">lsquo</span><span class="p">;</span><span class="n">tango</span><span class="o">&amp;</span><span class="n">rsquo</span><span class="p">;,</span> <span class="o">&amp;</span><span class="n">lsquo</span><span class="p">;</span><span class="n">fruity</span><span class="o">&amp;</span><span class="n">rsquo</span><span class="p">;,</span> <span class="o">&amp;</span><span class="n">lsquo</span><span class="p">;</span><span class="n">autumn</span><span class="o">&amp;</span><span class="n">rsquo</span><span class="p">;,</span> <span class="o">&amp;</span><span class="n">lsquo</span><span class="p">;</span><span class="n">bw</span><span class="o">&amp;</span><span class="n">rsquo</span><span class="p">;,</span> <span class="o">&amp;</span><span class="n">lsquo</span><span class="p">;</span><span class="n">emacs</span><span class="o">&amp;</span><span class="n">rsquo</span><span class="p">;,</span> <span class="o">&amp;</span><span class="n">lsquo</span><span class="p">;</span><span class="n">vim</span><span class="o">&amp;</span><span class="n">rsquo</span><span class="p">;,</span> <span class="o">&amp;</span><span class="n">lsquo</span><span class="p">;</span><span class="n">pastie</span><span class="o">&amp;</span><span class="n">rsquo</span><span class="p">;,</span> <span class="o">&amp;</span><span class="n">lsquo</span><span class="p">;</span><span class="n">friendly</span><span class="o">&amp;</span><span class="n">rsquo</span><span class="p">;,</span> <span class="o">&amp;</span><span class="n">lsquo</span><span class="p">;</span><span class="n">native</span><span class="o">&amp;</span><span class="n">rsquo</span><span class="p">;]</span></code></pre></div></p></blockquote></blockquote></blockquote>

<h3>选择一种样式，应用在Jekyll中</h3>

<ul>
<li><code>cd /dev/projects/zyzhang.github.com/assets/themes/abel/css</code></li>
<li><code>pygmentize -S native -f html &gt; pygments.css</code>, “native”是样式名，“html”是formatter</li>
<li>在layout中引用刚刚加的pygments.css</li>
</ul>


<h3>在文章中高亮代码</h3>

<p>现在，可以在博客中高亮代码了：</p>

<p><div class="highlight"><pre><code class="language-html" data-lang="html"><span class="nt">&lt;/p&gt;</span>

<span class="nt">&lt;p&gt;</span>%}
public class HelloWorld {
    public static void main(String args[]) {
      System.out.println(<span class="ni">&amp;ldquo;</span>Hello World!<span class="ni">&amp;rdquo;</span>);
    }
}
%}<span class="nt">&lt;/p&gt;</span>

<span class="nt">&lt;p&gt;</span></code></pre></div></p>

<p>效果如下：
<div class="highlight"><pre><code class="language-java" data-lang="java"><span class="kd">public</span> <span class="kd">class</span> <span class="nc">HelloWorld</span> <span class="o">{</span>
    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span> <span class="n">args</span><span class="o">[])</span> <span class="o">{</span>
      <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(&amp;</span><span class="n">ldquo</span><span class="o">;</span><span class="n">Hello</span> <span class="n">World</span><span class="o">!&amp;</span><span class="n">rdquo</span><span class="o">;);</span>
    <span class="o">}</span>
<span class="o">}</span></code></pre></div></p>

<h3>参考文章</h3>

<ul>
<li><a href="http://pygments.org/docs/styles/">Pygments Styles</a></li>
<li><a href="https://github.com/mojombo/jekyll/wiki/Liquid-Extensions/">Liquid Extensions</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[像极客一样写博客]]></title>
    <link href="http://zyzhang.github.io/blog/2012/08/29/blogging-like-a-geek/"/>
    <updated>2012-08-29T00:00:00+08:00</updated>
    <id>http://zyzhang.github.io/blog/2012/08/29/blogging-like-a-geek</id>
    <content type="html"><![CDATA[<p><img src="/assets/image/posts/blogging.jpg" alt="blogging" /></p>

<p>我以前用过csdn，iteye和cnblog的博客，始终不能令我满意。样式不喜欢，广告太多，富文本编辑器局限，等等等等问题，
所以每次更换博客后最终都是一个结果，太监了（好吧，我承认主要是因为懒惰&hellip;）。</p>

<p>也想过学其他同事那样，买个酷酷的域名，租个空间，再用WordPress搭个自己的博客，不过可惜，这种方式对我还是没啥驱动力&hellip;</p>

<p>日复一日，年复一年，直到有一天，GitHub Pages和Jekyll横空出世，瞬间点亮了我辈以极客自诩的屌丝程序员的双眼！</p>

<!-- more -->


<p>最近一周的业余时间都花在了在GitHub上玩博客，并且乐此不疲，为什么这货如此吸引我呢？</p>

<ul>
<li><strong>DIY的乐趣</strong>：作为一个会写HTML、Javascript、css的程序员，在自己的地盘不能把页面改成喜欢的样式简直是&hellip;抓心挠肝啊。</li>
<li><strong>安全无广告</strong></li>
<li><strong>GitHub空间无极限</strong>：早些时候，GitHub的Public Repository空间已经Unlimited了，给力！</li>
<li><strong>域名够酷</strong>：你可能觉得<code>zhenyu.im</code>之类的域名酷，可偶是程序员，就喜欢<code>zhenyu.github.com</code> (可惜这个已经被人抢先了，偶只好用<code>zyzhang.github.com</code>了)</li>
<li><strong>像写代码一样写博客</strong>：版本控制的思想早已深深印在程序员的骨子里了，commit啦，push啦，pull啦，diff啦，git有的，你都有！</li>
<li><strong>真正动手实践一些以前不了解的技术</strong>：参考我的另一篇文章<a href="/blog/2012/09/03/blog-with-github-pages-and-jekyll-seo">Github Pages + Jekyll搭建博客之SEO</a></li>
<li><strong>只有你想不到，没有你做不到</strong>：平时用Markdown写博客，简单又方便，需要特殊效果时，有什么是HTML+Javascript+css做不到的呢？</li>
</ul>


<p>回到正题，如果你和我一样喜欢这种崭新的博客方式，完成下面几个任务，然后尽情享受写博客的乐趣吧。</p>

<h3>在Github上创建Repository</h3>

<p>名字必须为${USERNAME}.github.com，${USERNAME}替换为你自己的用户名。</p>

<p>现在，你可以向这个repository提交静态文件（比如index.html）, 稍等一会你就可以在浏览器地址栏输入${USERNAME}.github.com访问你的页面了。</p>

<h3>在刚建好的repository中创建Jekyll格式的文件结构</h3>

<p>这里，我们借助<a href="http://jekyllbootstrap.com">Jekyll-Bootstrap</a>，这是一个基于Jekyll的解析引擎，支持模块化的主题(modular theming)。</p>

<p><div class="highlight"><pre><code class="language-bash" data-lang="bash"><span class="nv">$ </span>git clone &lt;a <span class="nv">href</span><span class="o">=</span><span class="s2">&quot;https://github.com/plusjade/jekyll-bootstrap.git&quot;</span>&gt;https://github.com/plusjade/jekyll-bootstrap.git&lt;/a&gt; USERNAME.github.com
<span class="nv">$ </span><span class="nb">cd </span>USERNAME.github.com
<span class="nv">$ </span>git remote <span class="nb">set</span>-url origin git@github.com:USERNAME/USERNAME.github.com.git
<span class="nv">$ </span>git push origin master</code></pre></div></p>

<p><img src="/assets/image/posts/jekyll-bootstrap-dir-structure.png" alt="jekyll-bootstrap-dir-structure" /></p>

<p>上面代码创建了如左图的Jekyll-Bootstrap标准目录结构，各个文件夹的用途在<a href="http://jekyllbootstrap.com/lessons/jekyll-introduction.html">Jekyll Introduction</a>中介绍的很清楚了，这里不再多说。</p>

<p><strong>需要注意的是：</strong></p>

<ol>
<li>_includes下的themes文件夹，这是定义主题的地方。</li>
<li>Jekyll支持<a href="http://en.wikipedia.org/wiki/Markdown">Markdown</a>等轻量级标记语言，所以有很多文件以.md为后缀名。</li>
<li>文章都放在_posts文件夹下，post的文件名必须遵循<code>YEAR-MONTH-DATE-title.后缀名</code>的格式，例如：2012-08-29-像极客一样写博客.md</li>
</ol>


<p>这时候访问你的博客页面，会看到默认的twitter主题样式，更多主题可以访问 <a href="http://themes.jekyllbootstrap.com">http://themes.jekyllbootstrap.com</a>。</p>

<h3>安装Jekyll</h3>

<p>安装Jekyll后，可以很方便的在发布文章之前进行本地预览。下面是安装步骤：</p>

<ul>
<li>Jekyll是基于Ruby的，所以，要先<a href="http://www.ruby-lang.org/en/downloads">安装Ruby</a>。</li>
<li>通过ruby gem安装：<code>gem install jekyll</code></li>
</ul>


<p>安装完毕后，在${USERNAME}.github.com目录下运行<code>jekyll --server</code>启动server，然后就可以在本地访问<a href="http://localhost:4000%E9%A2%84%E8%A7%88%E5%8D%9A%E5%AE%A2%E4%BA%86%E3%80%82">http://localhost:4000%E9%A2%84%E8%A7%88%E5%8D%9A%E5%AE%A2%E4%BA%86%E3%80%82</a></p>

<h3>自定义主题</h3>

<p>Jekyll-Bootstrap的主题管理很简单，有两种方式，一种是安装官方提供的主题，一种是自定义主题，详细内容参考<a href="http://jekyllbootstrap.com/usage/jekyll-theming.html">Using Themes</a></p>

<h3>发布博客</h3>

<p>发布博客和管理代码库一样，可以利用到git的强大功能，只要push上去了，本地更改就发布了。</p>

<h3>例子</h3>

<p>本博客就是依照上述步骤搭建起来的，你可以访问完整<a href="https://github.com/zyzhang/zyzhang.github.com">源代码</a>, 另外，由于Github Pages出于安全原因不支持用户自定义Jekyll插件，并且有时候Pygments代码高亮也有些问题，所以我改变了发布策略，只发布静态文件，详情见
<a href="http://zyzhang.github.com/blog/2012/09/10/avoid-dependency-of-github-pages-jekyll">避免依赖Github Pages和Jekyll生成静态文件</a>。
如果你不关心上述问题，仍然可以按照上面的步骤搭建标准的Github博客。</p>

<h3>参考文章</h3>

<ul>
<li><a href="http://jekyllbootstrap.com/lessons/jekyll-introduction.html">Jekyll Introduction</a></li>
<li><a href="http://jekyllbootstrap.com/usage/jekyll-quick-start.html">Jekyll Quick Start</a></li>
</ul>

]]></content>
  </entry>
  
</feed>
